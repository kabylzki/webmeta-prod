<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'common_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'common_documentation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\DefaultController::documentationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/documentation',    ),  ),  4 =>   array (  ),),
        'common_tutoriels' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\DefaultController::tutorielsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tutoriels',    ),  ),  4 =>   array (  ),),
        'common_faq' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\DefaultController::faqAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/faq',    ),  ),  4 =>   array (  ),),
        'common_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\DefaultController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),),
        'compte_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::formCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-compte',    ),  ),  4 =>   array (  ),),
        'compte_creation_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::creationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-compte-validation',    ),  ),  4 =>   array (  ),),
        'compte_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/compte',    ),  ),  4 =>   array (  ),),
        'compte_modification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::formModificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modification-compte',    ),  ),  4 =>   array (  ),),
        'compte_modification_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::modificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modification-compte-validation',    ),  ),  4 =>   array (  ),),
        'compte_modification_avatar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::formModificationAvatarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modification-avatar',    ),  ),  4 =>   array (  ),),
        'compte_modification_avatar_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\CompteController::modificationAvatarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modification-avatar-validation',    ),  ),  4 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\LoginController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\LoginController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'page_view' => array (  0 =>   array (    0 => 'nom_categorie',    1 => 'id',    2 => 'url_alias',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\PageController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '-',      2 => '[^/]++',      3 => 'url_alias',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\-]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/page',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom_categorie',    ),  ),  4 =>   array (  ),),
        'page_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\PageController::creationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-page',    ),  ),  4 =>   array (  ),),
        'page_creation_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\PageController::validationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-page-validation',    ),  ),  4 =>   array (  ),),
        'warbot_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\WarbotController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/warbot',    ),  ),  4 =>   array (  ),),
        'warbot_documentation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\WarbotController::documentationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/warbot-documentation',    ),  ),  4 =>   array (  ),),
        'tournoi_warbot' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\TournoiController::tournoiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/warbot-tournoi',    ),  ),  4 =>   array (  ),),
        'tournoi_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\TournoiController::creationTournoiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-tournoi',    ),  ),  4 =>   array (  ),),
        'tournoi_creation_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\TournoiController::validationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-tournoi-validation',    ),  ),  4 =>   array (  ),),
        'tournoi_gestion' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\TournoiController::gestionTournoiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/tournoi-gestion',    ),  ),  4 =>   array (  ),),
        'tournoi_coupe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\TypeTournoiController::coupeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tournoi-coupe',    ),  ),  4 =>   array (  ),),
        'metaciv_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\MetacivController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/metaciv',    ),  ),  4 =>   array (  ),),
        'metaciv_documentation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\MetacivController::documentationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/metaciv-documentation',    ),  ),  4 =>   array (  ),),
        'equipe_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::formCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-equipe',    ),  ),  4 =>   array (  ),),
        'equipe_creation_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::creationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creation-equipe-validation',    ),  ),  4 =>   array (  ),),
        'equipe_postuler' => array (  0 =>   array (    0 => 'id_equipe',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::postulerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_equipe',    ),    1 =>     array (      0 => 'text',      1 => '/postuler-equipe',    ),  ),  4 =>   array (  ),),
        'equipe_liste' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/liste-equipes',    ),  ),  4 =>   array (  ),),
        'equipe_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/equipe',    ),  ),  4 =>   array (  ),),
        'equipe_quit' => array (  0 =>   array (    0 => 'id_equipe',    1 => 'last',  ),  1 =>   array (    '_controller' => 'WebMeta\\CommonBundle\\Controller\\EquipeController::quitAction',    'last' => false,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '-',      2 => '[^/]++',      3 => 'last',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\-]++',      3 => 'id_equipe',    ),    2 =>     array (      0 => 'text',      1 => '/quitter-equipe',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
